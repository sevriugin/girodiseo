{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/clock.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/ethereum/ethcontract.service.ts","webpack:///./src/app/ethereum/ethereum.module.ts","webpack:///./src/app/ethereum/tokens.ts","webpack:///./src/app/getstarted/getstarted.component.css","webpack:///./src/app/getstarted/getstarted.component.html","webpack:///./src/app/getstarted/getstarted.component.ts","webpack:///./src/app/images.service.ts","webpack:///./src/app/landing/landing.component.css","webpack:///./src/app/landing/landing.component.html","webpack:///./src/app/landing/landing.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav-bar/nav-bar.component.css","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/parameters.ts","webpack:///./src/app/profile-update/profile-update.component.css","webpack:///./src/app/profile-update/profile-update.component.html","webpack:///./src/app/profile-update/profile-update.component.ts","webpack:///./src/app/ride-detail/ride-detail.component.css","webpack:///./src/app/ride-detail/ride-detail.component.html","webpack:///./src/app/ride-detail/ride-detail.component.ts","webpack:///./src/app/ride.service.ts","webpack:///./src/app/ride/ride.component.css","webpack:///./src/app/ride/ride.component.html","webpack:///./src/app/ride/ride.component.ts","webpack:///./src/app/rider.service.ts","webpack:///./src/app/sms-confirmation/sms-confirmation.component.css","webpack:///./src/app/sms-confirmation/sms-confirmation.component.html","webpack:///./src/app/sms-confirmation/sms-confirmation.component.ts","webpack:///./src/app/tag-detail/tag-detail.component.css","webpack:///./src/app/tag-detail/tag-detail.component.html","webpack:///./src/app/tag-detail/tag-detail.component.ts","webpack:///./src/app/tag-reg-sms/tag-reg-sms.component.css","webpack:///./src/app/tag-reg-sms/tag-reg-sms.component.html","webpack:///./src/app/tag-reg-sms/tag-reg-sms.component.ts","webpack:///./src/app/tag-registration/tag-registration.component.css","webpack:///./src/app/tag-registration/tag-registration.component.html","webpack:///./src/app/tag-registration/tag-registration.component.ts","webpack:///./src/app/tag.service.ts","webpack:///./src/app/tags/tags.component.css","webpack:///./src/app/tags/tags.component.html","webpack:///./src/app/tags/tags.component.ts","webpack:///./src/app/user-profile/user-profile.component.css","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///util (ignored)","webpack:///util (ignored)?340a","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"4em\\\">\\n    <mat-grid-tile [routerLink]=\\\"['/landing']\\\" [rowspan]=\\\"3\\\" [colspan]=\\\"3\\\">\\n        <img  src=\\\"../assets/giro_logo_big.png\\\">\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile rowHeight=\\\"3em\\\" [colspan]=\\\"3\\\">\\n      <p>Giro d'Iseo Web Application</p>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile rowHeight=\\\"3em\\\" [colspan]=\\\"3\\\">\\n      <p><small>Virsion 0.0.1.3</small></p>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile rowHeight=\\\"3em\\\" [colspan]=\\\"3\\\">\\n        <p><small>Ethereum Rinkiby network (https)</small></p>\\n      </mat-grid-tile>\\n\\n    <mat-grid-tile rowHeight=\\\"3em\\\" [colspan]=\\\"3\\\">\\n      <p><small>Copyright REGA Risk Sharing (C) 2019</small></p>\\n    </mat-grid-tile>\\n    \\n</mat-grid-list>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TagsComponent } from './tags/tags.component';\nimport { TagDetailComponent } from './tag-detail/tag-detail.component';\nimport { TagRegistrationComponent } from './tag-registration/tag-registration.component';\nimport { TagRegSmsComponent } from './tag-reg-sms/tag-reg-sms.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { SmsConfirmationComponent } from './sms-confirmation/sms-confirmation.component';\nimport { AboutComponent } from './about/about.component';\nimport { ProfileUpdateComponent } from './profile-update/profile-update.component';\nimport { RideComponent } from './ride/ride.component';\nimport { RideDetailComponent } from './ride-detail/ride-detail.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { GetstartedComponent } from './getstarted/getstarted.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/landing', pathMatch: 'full' },\n  { path: 'landing', component: LandingComponent },\n  { path: 'tags', component: TagsComponent },\n  { path: 'reg', component: TagRegistrationComponent },\n  { path: 'tag/:id', component: TagDetailComponent },\n  { path: 'regsms/:id/:mobile', component: TagRegSmsComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile', component: UserProfileComponent },\n  { path: 'smsconfirm/:mobile', component: SmsConfirmationComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'update', component: ProfileUpdateComponent },\n  { path: 'ride', component: RideComponent },\n  { path: 'ride/:id', component: RideDetailComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'getstarted', component: GetstartedComponent },\n];\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [ RouterModule.forRoot(routes) ],\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-nav-bar></app-nav-bar>\\n<router-outlet></router-outlet>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TagService } from './tag.service';\nimport { Tag } from './tag';\n\n@Component({\n  selector: 'app-root',\n  styleUrls: ['./app.component.css'],\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = `Giro d'Iseo`;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { environment } from '../environments/environment';\nimport { TagsComponent } from './tags/tags.component';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TagDetailComponent } from './tag-detail/tag-detail.component';\nimport { TagRegistrationComponent } from './tag-registration/tag-registration.component';\nimport { TagRegSmsComponent } from './tag-reg-sms/tag-reg-sms.component';\nimport { AuthService } from './auth.service';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { LandingComponent } from './landing/landing.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { LoginComponent } from './login/login.component';\nimport { SmsConfirmationComponent } from './sms-confirmation/sms-confirmation.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { TagService } from './tag.service';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { DatePipe } from '@angular/common';\nimport { AboutComponent } from './about/about.component';\nimport { ProfileUpdateComponent } from './profile-update/profile-update.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material';\nimport { RiderService } from './rider.service';\nimport { RideComponent } from './ride/ride.component';\nimport { ClockService } from './clock.service';\nimport { MatTableModule } from '@angular/material/table';\nimport { RideDetailComponent } from './ride-detail/ride-detail.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { GravatarModule } from 'ngx-gravatar';\nimport { ImagesService } from './images.service';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { GetstartedComponent } from './getstarted/getstarted.component';\nimport { VgCoreModule } from 'videogular2/core';\nimport { VgControlsModule } from 'videogular2/controls';\nimport { VgOverlayPlayModule } from 'videogular2/overlay-play';\nimport { VgBufferingModule } from 'videogular2/buffering';\nimport { MatCardModule } from '@angular/material/card';\nimport { EthcontractService } from './ethereum/ethcontract.service';\nimport { EthereumModule } from './ethereum/ethereum.module';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TagsComponent,\n    TagDetailComponent,\n    TagRegistrationComponent,\n    TagRegSmsComponent,\n    NavBarComponent,\n    LandingComponent,\n    LoginComponent,\n    SmsConfirmationComponent,\n    UserProfileComponent,\n    AboutComponent,\n    ProfileUpdateComponent,\n    RideComponent,\n    RideDetailComponent,\n    DashboardComponent,\n    GetstartedComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireStorageModule,\n    MatListModule,\n    MatButtonModule,\n    AppRoutingModule,\n    FormsModule,\n    MatInputModule,\n    MatDividerModule,\n    MatSelectModule,\n    MatIconModule,\n    AngularFireAuthModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatPaginatorModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTableModule,\n    GravatarModule,\n    MatProgressBarModule,\n    VgCoreModule,\n    VgBufferingModule,\n    VgControlsModule,\n    VgOverlayPlayModule,\n    MatCardModule,\n    EthereumModule,\n    MatSlideToggleModule\n  ],\n  providers: [\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AuthService,\n    TagService,\n    DatePipe,\n    RiderService,\n    ClockService,\n    ImagesService,\n    EthcontractService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\nimport { Observable, of  } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n  private user: Observable<firebase.User>;\n  private confirmation: firebase.auth.ConfirmationResult;\n  private userDetails: firebase.User = null;\n\n  constructor(private _firebaseAuth: AngularFireAuth, private router: Router) {\n      this.user = _firebaseAuth.authState;\n\n      this.user.subscribe((user) => {\n        if (user) {\n          this.userDetails = user;\n          console.log(`AuthService: constructor: userDetails:`);\n          console.log(this.userDetails);\n        } else {\n          this.userDetails = null;\n        }\n      }\n    );\n  }\n\n  getUser(): Observable<firebase.User> {\n    return this.user;\n  }\n\n  signInWithPhoneNumber(phoneNumber: string, appVerifier: any, cb: Function) {\n    this._firebaseAuth.auth.signInWithPhoneNumber(phoneNumber, appVerifier)\n      .then(confirmationResult => {\n        this.confirmation = confirmationResult; // make a copy\n        console.log(`AuthService: signInWithPhoneNumber: confirmation object`);\n        console.log(this.confirmation);\n\n        cb(null, confirmationResult);\n      })\n      .catch(error => {\n        console.error(`AuthService: signInWithPhoneNumber: ${error}`);\n        cb(error, null);\n      });\n  }\n\n  getConfirmation(code: string, cb: Function) {\n    if (!this.confirmation) {\n      const errMsg = 'AuthSevice: error: the confirmationResult object is missing';\n      console.error(errMsg);\n      cb(errMsg, null);\n    } else {\n      // check confirmation\n      this.confirmation.confirm(code)\n        .then(result => { this.user = of(result.user); cb(null, result.user); })\n        .catch(error => cb(error, null));\n    }\n  }\n\n  authenticated(): boolean {\n    if (this.userDetails == null ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  getUID(): string | null {\n    if (this.userDetails == null ) {\n      return null;\n    } else {\n      return this.userDetails.uid;\n    }\n  }\n\n  logout(): void {\n    this._firebaseAuth.auth.signOut().then(() => {\n      // Sign-out successful.\n      console.log(`AuthService: sing out`);\n      this.router.navigate(['/']);\n    }).catch((error) => {\n      console.error(`AuthService: error: ${error}`);\n    });\n  }\n\n  getUserPhone(): string | null {\n    if (!this.userDetails) {\n      return null;\n    } else {\n      return this.userDetails.phoneNumber;\n    }\n  }\n\n  getUserName(): string | null {\n    if (!this.userDetails) {\n      return null;\n    } else {\n      return this.userDetails.displayName;\n    }\n  }\n\n  getUserEmail(): string | null {\n    if (!this.userDetails) {\n      return null;\n    } else {\n      return this.userDetails.email;\n    }\n  }\n\n  getUserPhotoURL(): string | null {\n    if (!this.userDetails) {\n      return null;\n    } else {\n      return this.userDetails.photoURL;\n    }\n  }\n\n  updateProfileCB(username: string, photoURL: string, cb: Function): void {\n    const user = this._firebaseAuth.auth.currentUser;\n    user.updateProfile({ displayName: username, photoURL: photoURL })\n      .then(() => cb(null))\n      .catch((error) => cb(error));\n  }\n\n  updateEmailCB(email: string, cb: Function): void {\n    const user = this._firebaseAuth.auth.currentUser;\n    user.updateEmail(email)\n      .then(() => cb(null))\n      .catch((error) => cb(error));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClockService {\n  private clock: Observable<Date>;\n  private timeoutId;\n\n  constructor() {\n    this.clock = new Observable(obsever => {\n      this.timeoutId = setTimeout(() => {\n        obsever.next(new Date);\n        return {unsubscribe() {\n          clearTimeout(this.timeoutId);\n        }};\n      }, 100);\n    });\n  }\n  getClock(): Observable<Date> {\n    return this.clock;\n  }\n}\n","module.exports = \"table {\\n    width: 100%;\\n  }\\n\\n.mat-cell .mat-icon {\\n    -webkit-transform: scale(0.6);\\n            transform: scale(0.6);\\n}\"","module.exports = \"<mat-grid-list  cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n  <mat-grid-tile>\\n    <button (click)=\\\"gotoBack()\\\" mat-icon-button>\\n      <mat-icon>arrow_back_ios</mat-icon>\\n    </button>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile>\\n    <h3>Dashboard</h3>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile>\\n    <button (click)=\\\"update()\\\" mat-icon-button>\\n      <mat-icon>autorenew</mat-icon>\\n    </button> \\n  </mat-grid-tile>\\n\\n  <mat-grid-tile [rowspan]=\\\"2\\\" [colspan]=\\\"3\\\">      \\n    Best ride time for all Giro d'Iseo riders\\n  </mat-grid-tile>\\n  \\n</mat-grid-list>\\n\\n<div *ngIf=\\\"rides\\\">\\n  <table *ngIf=\\\"rides.length>0\\\" mat-table [dataSource]=\\\"rides | slice:start:end\\\" class=\\\"mat-elevation-z8\\\">\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"position\\\">\\n      <th mat-header-cell *matHeaderCellDef> No. </th>\\n      <td mat-cell *matCellDef=\\\"let element; let i = index;\\\"> {{i+1}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"avatar\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"><img *ngIf=\\\"element.rider && element.rider.avatar\\\" ngxGravatar size=\\\"30\\\" [fallback]=\\\"'monsterid'\\\" [src]=\\\"element.rider.avatar\\\"></td>\\n      </ng-container>\\n\\n    <ng-container matColumnDef=\\\"nikname\\\">\\n      <th mat-header-cell *matHeaderCellDef> Rider </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.rider?element.rider.nikname:\\\"N/A\\\"}}</td>\\n    </ng-container>\\n    \\n    <ng-container matColumnDef=\\\"date\\\">\\n      <th mat-header-cell *matHeaderCellDef> Date </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.start|date:\\\"dd-MM-yyyy\\\"}}</td>\\n    </ng-container>\\n    \\n    <ng-container matColumnDef=\\\"start\\\">\\n      <th mat-header-cell *matHeaderCellDef> Start </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.start|date:\\\"HH:mm\\\"}}</td>\\n    </ng-container>\\n    \\n    <ng-container matColumnDef=\\\"finish\\\">\\n      <th mat-header-cell *matHeaderCellDef> Finish </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.finish|date:\\\"HH:mm:ss\\\"}}</td>\\n    </ng-container>\\n      \\n    <ng-container matColumnDef=\\\"time\\\">\\n      <th mat-header-cell *matHeaderCellDef> Time </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{(element.finish-element.start)|date:\\\"HH:mm:ss\\\":\\\"+00\\\"}} </td>\\n    </ng-container>\\n    \\n    <ng-container matColumnDef=\\\"link\\\">\\n      <th mat-header-cell *matHeaderCellDef> Details </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <button (click)=\\\"gotoRide(element.id)\\\" mat-icon-button> <mat-icon>call_made</mat-icon></button> </td>\\n    </ng-container>\\n      \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  <br>\\n      \\n  <mat-paginator *ngIf=\\\"rides.length>0\\\" [length]=\\\"rides.length\\\"\\n                [pageSize]=\\\"10\\\"\\n                [pageSizeOptions]=\\\"[1, 5, 10, 25, 100]\\\"\\n                (page)=\\\"setPage($event)\\\">\\n  </mat-paginator>\\n</div>\\n\"","import { Component, OnInit, OnDestroy, AfterViewInit, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { TagService } from '../tag.service';\nimport { AuthService } from '../auth.service';\nimport { RiderService } from '../rider.service';\nimport { RideService } from '../ride.service';\nimport { Rider, Bike} from '../rider';\nimport { Ride } from '../ride';\nimport { Tag } from '../tag';\nimport { PageEvent } from '@angular/material';\nimport { DatePipe } from '@angular/common';\nimport { Subscription, Observable, timer } from 'rxjs';\nimport { Parameters, RideParameters } from '../parameters';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  providers: [RideParameters]\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  rides: Ride[];\n  start: number;\n  end: number;\n\n  sub: Subscription;\n\n  displayedColumns: string[] = ['position', 'avatar', 'nikname',  'start', 'time', 'link'];\n\n  constructor(\n    private zone: NgZone,\n    private tagService: TagService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private riderService: RiderService,\n    private rideService: RideService,\n    private datePipe: DatePipe,\n    private location: Location,\n    private param: RideParameters\n    ) { console.log(this.param); }\n\n  ngOnInit() {\n    this.start = 0;\n    this.end = 10;\n    this.getRides();\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  setPage(e: PageEvent): void {\n    console.log(e);\n    const { pageIndex, pageSize } = e;\n    this.start = pageIndex * pageSize;\n    this.end = this.start + pageSize;\n  }\n\n  update(): void {\n    this.rideService.setOrder('time');\n  }\n\n  gotoBack(): void {\n    this.location.back();\n  }\n\n  getRides(): void {\n    this.sub = this.rideService.getRides()\n      .subscribe(rides => this.rides = rides);\n  }\n\n  gotoRide(id: number): void {\n    this.router.navigate([`/ride/${id}`]);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\n\nimport { WEB3 } from './tokens';\nimport Web3 from 'web3';\n\n\nimport { Observable, bindNodeCallback, of } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\n\ndeclare function require(url: string);\ndeclare let window: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EthcontractService {\n\n  readonly ethHdWallet = require('eth-hd-wallet');\n  readonly TokenLoyalty = require('./build/contracts/TokenLoyalty.json');\n\n  private mnemonic: string;\n  private wallet: any;\n  private contract: any;\n  private accounts: string[];\n\n  constructor(@Inject(WEB3) private web3: Web3) {\n    const { generateMnemonic, EthHdWallet } = this.ethHdWallet;\n\n    this.mnemonic = 'dish hip orange move divert opera primary sketch empty pistol car boil';\n    this.wallet = EthHdWallet.fromMnemonic(this.mnemonic);\n    this.accounts = this.wallet.generateAddresses(2);\n\n    this.contract = new web3.eth.Contract(\n      this.TokenLoyalty.abi,\n      this.TokenLoyalty.networks['4'].address,\n      {from: this.accounts[0]}\n      );\n\n    if (typeof this.contract !== 'undefined') {\n      console.log(`EthcontractService: contract is here ${this.contract.options.address}`);\n    }\n\n    console.log(this.accounts);\n    console.log(this.mnemonic);\n  }\n\n  alife() {\n    if (typeof this.web3 !== 'undefined') {\n      console.log('EthcontractService: web3 is here');\n    } else {\n      console.error('EthcontractService: web3 is not injected');\n    }\n  }\n\n  getAccounts(): Observable<string[]> {\n    return of(this.accounts);\n  }\n\n  getMnemonic(): Observable<string> {\n    return of(this.mnemonic);\n  }\n\n  getBalance(): Observable<any[] | Error> {\n    console.log('getBalance');\n    return bindNodeCallback(this.contract.methods.getBalance().call)({from: this.accounts[0], gasPrice: '8000000000', gas: '1000000'});\n  }\n\n  getAccountBalance(account: string | null): Observable<string[]> {\n    const acc = account ? account : this.accounts[0];\n    console.log(`getAccountBalance: ${acc}`);\n    return bindNodeCallback(this.web3.eth.getBalance)(acc);\n  }\n\n}\n","import { NgModule, ModuleWithProviders, Type, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// Web3\nimport { WEB3 } from './tokens';\n\ndeclare function require(url: string);\n\nconst Web3 = require('web3');\n\n// Services\nimport { EthcontractService } from './ethcontract.service';\n\n@NgModule({\n imports: [CommonModule],\n declarations: [],\n providers: [ EthcontractService , {\n         provide: WEB3,\n         useFactory: () => new Web3('https://rinkeby.infura.io/v3/7ec884266d6343fab14b21fa52a06343')\n  }]\n})\nexport class EthereumModule {}\n","import { InjectionToken } from '@angular/core';\nimport Web3 from 'web3';\nexport const WEB3 = new InjectionToken<Web3>('web3');\n","module.exports = \".vg-player {\\n    width: 400px;\\n}\"","module.exports = \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n  \\n  <mat-grid-tile>\\n    <button (click)=\\\"gotoBack()\\\" mat-icon-button>\\n      <mat-icon>arrow_back_ios</mat-icon>\\n    </button>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile>\\n    <h3>Join Giro d'Iseo</h3>\\n  </mat-grid-tile>\\n  \\n  <mat-grid-tile></mat-grid-tile>\\n</mat-grid-list>\\n\\n<p>Ride around Iseo lake, earning points and use them to buy local goods and services with discounts.</p>\\n\\n<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n      <h3>To be a club meber</h3>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n\\n<mat-action-list>\\n  <button mat-list-item [routerLink]=\\\"['/reg']\\\" > 1. Press here to register new tag &nbsp; <mat-icon>add_circle_outline</mat-icon></button>\\n  <button mat-list-item [routerLink]=\\\"['/ride']\\\"> 2. Press here to start new ride &nbsp; &nbsp; &nbsp; <mat-icon>directions_bike</mat-icon></button>\\n  <button mat-list-item [routerLink]=\\\"['/dashboard']\\\"> 3. Press here to view all results &nbsp; &nbsp; <mat-icon>dashboard</mat-icon> </button>\\n</mat-action-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-getstarted',\n  templateUrl: './getstarted.component.html',\n  styleUrls: ['./getstarted.component.css']\n})\nexport class GetstartedComponent implements OnInit {\n\n  constructor(private location: Location) { }\n\n  ngOnInit() {\n  }\n\n  gotoBack(): void {\n    this.location.back();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireStorage, AngularFireUploadTask } from '@angular/fire/storage';\nimport { Router } from '@angular/router';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\nimport { Observable, of  } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesService {\n  private storageRef: firebase.storage.Reference;\n  private imagesRef: firebase.storage.Reference;\n\n  constructor(private storage: AngularFireStorage) {}\n\n  uploadAvatar(id: string, avatar: File): AngularFireUploadTask {\n    // create full path to the file with id as subdirectory\n    const filePath = `${id}/images/${avatar.name}`;\n    const ref = this.storage.ref(filePath);\n    // upload and return task\n    return this.storage.upload(filePath, avatar);\n  }\n}\n","module.exports = \".example-card {\\n    max-width: 380px;\\n  }\\n  \\n  img {\\n    max-height: 380px;\\n  }\\n  \"","module.exports = \"<br>\\n<mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n      <mat-card-title>Fun, Wellness, Savings</mat-card-title>\\n      <mat-card-subtitle>Ride around Iseo lake, earning points and use them to buy local goods and services with discounts.</mat-card-subtitle>\\n    </mat-card-header>\\n  \\n        <img  [routerLink]=\\\"['/getstarted']\\\"mat-card-image src=\\\"../assets/girodiseo.jpg\\\" alt=\\\"Get Started\\\">\\n\\n    <mat-card-content>\\n      <strong>Join the Giro d'Iseo to make the riding even more fun!</strong>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-raised-button [routerLink]=\\\"['/getstarted']\\\" color=\\\"warn\\\">Get started</button>\\n      <button mat-raised-button [routerLink]=\\\"['/dashboard']\\\" color=\\\"primary\\\">See results</button>\\n    </mat-card-actions>\\n  </mat-card>\\n  \\n\\n\\n\\n\\n\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { EthcontractService } from '../ethereum/ethcontract.service';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n\n  constructor(private contractService: EthcontractService, private zone: NgZone) {\n  }\n\n  ngOnInit() {\n    console.log(`Landing loaded`);\n    this.contractService.alife();\n    this.contractService.getBalance().subscribe((result) => this.zone.run(() => console.log(result)));\n    this.contractService.getAccountBalance(null).subscribe((result) => this.zone.run(() => console.log(result)));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n      <h3>User login</h3>\\n    </mat-grid-tile>\\n    \\n</mat-grid-list>\\n\\n<form class=\\\"example-form\\\">\\n\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n\\n    <mat-grid-tile [rowspan]=\\\"3\\\" [colspan]=\\\"3\\\">\\n      <mat-form-field>\\n        <input matInput name=\\\"mobile\\\" type=\\\"text\\\" placeholder=\\\"Enter mobile\\\" required minlenght=\\\"7\\\" [(ngModel)]=\\\"mobile\\\">\\n        <mat-hint align=\\\"start\\\">Example: <strong>+16505551234</strong> </mat-hint>\\n      </mat-form-field>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n      {{msg}}\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!mobile || progress\\\" (click)=\\\"login($event)\\\">Login</button>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n      <button mat-raised-button color=\\\"warn\\\" [disabled]=\\\"!mobile || progress\\\" (click)=\\\"clear()\\\">Clear</button>\\n    </mat-grid-tile>\\n  \\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n    </mat-grid-tile>\\n\\n  </mat-grid-list>\\n</form>\\n\\n<div id=\\\"recaptcha-container\\\"></div>\\n\"","import { Component, OnInit, AfterViewInit, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { TagService } from '../tag.service';\nimport { Tag, Registration } from '../tag';\nimport * as firebase from 'firebase/app';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n  recaptchaVerifier: any;\n  mobile: string;\n  msg: string;\n  progress: boolean;\n\n  constructor(\n    private zone: NgZone,\n    private tagService: TagService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router\n    ) { }\n\n  ngAfterViewInit() {\n    // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    // Add 'implements AfterViewInit' to the class.\n    this.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n  }\n\n  ngOnInit() {\n    this.clear();\n  }\n  clear() {\n    this.mobile = null;\n    this.msg = null;\n    this.progress = false;\n  }\n  login(e: Event) {\n    this.progress = true;\n    e.preventDefault();\n    e.stopPropagation();\n    this.authService.signInWithPhoneNumber(this.mobile, this.recaptchaVerifier, (error, confirmationResult) => {\n      if (error) {\n        // Login error\n        console.error(`LoginComponent: login: ${error}`);\n        this.msg = error;\n        this.progress = false;\n      } else {\n        // I've got a confirmation object, lets go to the SMS confirmation screen\n        // Need to use NgZone.run to go back to Angular zone exec env\n        this.zone.run(() => this.router.navigate([`/smsconfirm/${this.mobile}`]))\n          .then(() => console.log('LoginComponent: login: navigated to smsconfirm'))\n          .catch((err) => console.error(err));\n        console.log(`Has confirmation for ${this.mobile}`);\n        console.log(confirmationResult);\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \" <mat-grid-list cols=\\\"8\\\" rowHeight=\\\"3em\\\">\\n    <mat-grid-tile (click)=\\\"gotoHome()\\\" [colspan]=\\\"3\\\">\\n      <img  src=\\\"../assets/girologo.png\\\">&nbsp;&nbsp;<h3>Giro d'Iseo</h3>\\n    </mat-grid-tile>\\n   \\n    <mat-grid-tile></mat-grid-tile>\\n    \\n    <mat-grid-tile (click)=\\\"gotoReg()\\\" [colspan]=\\\"2\\\"><small>{{nikname}}</small></mat-grid-tile>\\n    <mat-grid-tile>\\n        <button (click)=\\\"gotoReg()\\\" mat-icon-button>\\n            <mat-icon>{{authenticated()?\\\"account_circle\\\":\\\"add_circle_outline\\\"}}</mat-icon>\\n        </button>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n            <mat-icon>more_vert</mat-icon>\\n        </button>\\n          <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item (click)=\\\"gotoHome()\\\">Home</button>\\n            <button mat-menu-item (click)=\\\"gotoRide()\\\">Ride</button>\\n            <button mat-menu-item (click)=\\\"gotoDashboard()\\\">Dashboard</button>\\n            <button mat-menu-item (click)=\\\"gotoTags()\\\">Tag list</button>\\n            <button mat-menu-item (click)=\\\"gotoAbout()\\\">About</button>\\n            <button (click)=\\\"logout()\\\" mat-menu-item>{{authenticated()?\\\"Logout\\\":\\\"Login\\\"}}</button>\\n          </mat-menu>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n  <mat-divider></mat-divider>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { Rider } from '../rider';\nimport { RiderService } from '../rider.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit, OnDestroy {\n  loginIcon: string;\n  rider: Rider;\n  nikname: string;\n  rider_subs: Subscription;\n  user_subs: Subscription;\n  mobile: string;\n\n  constructor(private authService: AuthService, private router: Router, private riderService: RiderService) { }\n\n  ngOnInit() {\n    this.user_subs = this.authService.getUser().subscribe((user) => {\n      if (user) {\n        this.mobile = user.phoneNumber;\n        this.getRider();\n      } else {\n        this.mobile = null;\n        this.nikname = null;\n      }\n    });\n    if (this.authService.authenticated()) {\n      this.loginIcon = 'account_circle';\n    } else {\n      this.mobile = null;\n      this.nikname = null;\n      this.loginIcon = 'add_circle_outline';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.rider_subs) { this.rider_subs.unsubscribe(); }\n  }\n\n  getRider(): void {\n    this.rider_subs = this.riderService.getRiderByMobile(this.mobile)\n    .subscribe(riders => {\n      if (riders) {\n        if (riders.length > 0) {\n          console.log('navbar');\n          console.log(riders[0]);\n          this.rider = riders[0];\n          this.nikname = this.rider.nikname;\n        }\n      }\n     });\n  }\n\n  authenticated(): boolean {\n    return this.authService.authenticated();\n  }\n\n  logout(): void {\n    if (this.authenticated()) {\n      this.authService.logout();\n    } else {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  gotoTags(): void {\n    this.router.navigate(['/tags']);\n  }\n\n  gotoRide(): void {\n    this.router.navigate(['/ride']);\n  }\n\n  gotoAbout(): void {\n    this.router.navigate(['/about']);\n  }\n\n  gotoDashboard(): void {\n    this.router.navigate(['/dashboard']);\n  }\n\n  gotoReg(): void {\n    if (this.authenticated()) {\n      this.router.navigate(['/profile']);\n    } else {\n      this.router.navigate(['/reg']);\n    }\n  }\n\n  gotoHome(): void {\n    this.router.navigate(['/']);\n  }\n}\n","export class RideParameters {\n    mintime: number = 1000 * 6;\n    maxtime: number = 1000 * 60 * 60 * 3;\n}\n\nexport class Parameters {\n    ride: RideParameters;\n}\n","module.exports = \"input[type=\\\"file\\\"] {\\n    display: none;\\n}\\n.custom-file-upload {\\n        border: 1px solid #ccc;\\n        display: inline-block;\\n        padding: 6px 12px;\\n        cursor: pointer;\\n}\\n.mat-progress-bar {\\n    width: 50px;\\n}\"","module.exports = \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n      <h3>Profile Update</h3>\\n    </mat-grid-tile>\\n    \\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n        <label for=\\\"file-upload\\\">\\n            <img ngxGravatar size=\\\"44\\\" [fallback]=\\\"'monsterid'\\\" [md5Hash]=\\\"hash\\\" [src]=\\\"avatarURL()\\\">\\n          <input id=\\\"file-upload\\\" type=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\"/>\\n        </label>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n      <mat-progress-bar *ngIf=\\\"avatar\\\" mode=\\\"determinate\\\" value=\\\"uploadPercent | async\\\"></mat-progress-bar>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <mat-icon *ngIf=\\\"updates.avatar\\\">check_circle_outline</mat-icon>\\n    </mat-grid-tile>\\n    \\n</mat-grid-list>\\n\\n<form class=\\\"example-form\\\">\\n\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n\\n    <mat-grid-tile [rowspan]=\\\"2\\\" [colspan]=\\\"2\\\">\\n      <mat-form-field>\\n        <input matInput name=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"Enter name\\\" required [(ngModel)]=\\\"username\\\">\\n        <mat-hint align=\\\"start\\\">Example: <strong>John Smith</strong> </mat-hint>\\n      </mat-form-field>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [rowspan]=\\\"2\\\">\\n      <mat-icon *ngIf=\\\"updates.username\\\">check_circle_outline</mat-icon>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [rowspan]=\\\"2\\\" [colspan]=\\\"2\\\">\\n      <mat-form-field>\\n        <input matInput name=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"email\\\">\\n        <mat-hint align=\\\"start\\\">Example: <strong>smith.john@gmail.com</strong> </mat-hint>\\n      </mat-form-field>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [rowspan]=\\\"2\\\">\\n      <mat-icon *ngIf=\\\"updates.email\\\">check_circle_outline</mat-icon>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [rowspan]=\\\"2\\\" [colspan]=\\\"2\\\">\\n        <mat-form-field>\\n          <input matInput name=\\\"nikname\\\" type=\\\"text\\\" placeholder=\\\"Enter nikname\\\" [(ngModel)]=\\\"nikname\\\">\\n          <mat-hint align=\\\"start\\\">Example: <strong>Colnago Rider</strong> </mat-hint>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n  \\n      <mat-grid-tile [rowspan]=\\\"2\\\">\\n        <mat-icon *ngIf=\\\"updates.nikname\\\">check_circle_outline</mat-icon>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile  [colspan]=\\\"2\\\">\\n              <mat-slide-toggle\\n              name=\\\"wallet\\\"\\n              [(ngModel)]=\\\"checked\\\"\\n              [checked]=\\\"checked\\\"\\n              [disabled]=\\\"disabled\\\">\\n            Generate a new wallet\\n          </mat-slide-toggle>\\n        </mat-grid-tile>\\n    \\n        <mat-grid-tile>\\n          <mat-icon *ngIf=\\\"updates.wallet\\\">check_circle_outline</mat-icon>\\n        </mat-grid-tile>\\n\\n    <mat-grid-tile [rowspan]=\\\"2\\\" [colspan]=\\\"3\\\">\\n      {{msg}}\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!username || progress\\\" (click)=\\\"update($event)\\\">Update</button>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <button mat-raised-button color=\\\"warn\\\" [disabled]=\\\"progress\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </mat-grid-tile>\\n  \\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n    </mat-grid-tile>\\n\\n  </mat-grid-list>\\n</form>\\n\"","import { Component, OnInit, AfterViewInit, NgZone } from '@angular/core';\nimport { AngularFireStorage, AngularFireUploadTask } from '@angular/fire/storage';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { TagService } from '../tag.service';\nimport { AuthService } from '../auth.service';\nimport { RiderService } from '../rider.service';\nimport { Rider, Bike} from '../rider';\nimport { ImagesService } from '../images.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { Observer } from 'firebase';\nimport { finalize } from 'rxjs/operators';\nimport { Wallet } from '../wallet';\nimport { EthcontractService } from '../ethereum/ethcontract.service';\n\n@Component({\n  selector: 'app-profile-update',\n  templateUrl: './profile-update.component.html',\n  styleUrls: ['./profile-update.component.css']\n})\nexport class ProfileUpdateComponent implements OnInit {\n  rider: Rider;\n  mobile: string;\n  username: string;\n  nikname: string;\n  avatar: string;\n  email: string;\n  msg: string;\n  progress: boolean;\n  hash: string;\n  uploadPercent: Observable<number>;\n  downloadURL: Observable<string>;\n  percentage: number;\n  wallet: Wallet;\n  checked: boolean;\n  disabled: boolean;\n  updates: {\n    username: boolean,\n    email: boolean,\n    nikname: boolean,\n    rider: boolean,\n    newrider: boolean,\n    avatar: boolean,\n    wallet: boolean\n  };\n\n\n  constructor(\n    private zone: NgZone,\n    private tagService: TagService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private riderService: RiderService,\n    private imagesService: ImagesService,\n    private storage: AngularFireStorage,\n    private contractService: EthcontractService\n    ) { }\n\n  ngOnInit() {\n    this.clear();\n    this.riderService.getRiderByMobile(this.authService.getUserPhone())\n      .subscribe(riders => {\n        if (riders) {\n          if (riders.length > 0) {\n            this.rider = riders[0];\n            this.nikname = this.rider.nikname;\n            this.hash = this.rider.id;\n            if (this.rider.wallet) {\n              this.disabled = true;\n              this.wallet = this.rider.wallet;\n            } else {\n              this.wallet.id = this.hash;\n            }\n          }\n        }\n       });\n      this.contractService.getMnemonic().subscribe((mnemonic) => {\n        this.wallet.mnemonic = mnemonic;\n        console.log(`get mnemonic: ${this.wallet.mnemonic}`);\n        this.contractService.getAccounts().subscribe((accounts) => {\n          this.wallet.accounts = accounts;\n          console.log(`get accounts`);\n          console.log(this.wallet.accounts);\n        });\n      });\n  }\n\n  avatarURL(): string |null {\n    if (this.avatar) {\n      return this.avatar;\n    }\n    if (this.rider) {\n      return this.rider.avatar;\n    }\n  }\n\n  clear() {\n    this.mobile = this.authService.getUserPhone();\n    this.username = this.authService.getUserName();\n    this.email = this.authService.getUserEmail();\n    this.progress = false;\n    this.msg = null;\n    this.avatar = null;\n    this.percentage = 0;\n    this.checked = false;\n    this.disabled = false;\n    this.wallet = { id: null, accounts: [], mnemonic: null};\n    this.updates = {username: false, email: false, nikname: false, rider: false, newrider: false, avatar: false, wallet: false};\n  }\n\n  update(e: Event) {\n    this.progress = true;\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.username) {\n      this.authService.updateProfileCB(this.username, null, (err) => {\n        if (err) {\n          this.msg = err;\n          this.progress = false;\n          this.updates.username = false;\n          console.log(`ProfileUpdateComponent: update: ${err}`);\n        } else {\n          this.progress = false;\n          this.updates.username = true;\n          this.msg = 'Profile is updated';\n        }\n      });\n    }\n    if (this.email) {\n      this.authService.updateEmailCB(this.email, (err) => {\n        if (err) {\n          this.msg = err;\n          this.progress = false;\n          this.updates.email = false;\n          console.log(`ProfileUpdateComponent: update: ${err}`);\n        } else {\n          this.progress = false;\n          this.updates.email = true;\n          this.msg = 'Profile is updated';\n        }\n      });\n    }\n    if (this.nikname) {\n      if (this.rider) {\n        this.rider.nikname = this.nikname;\n        this.updates.rider = true;\n      } else {\n        this.rider = { id: this.authService.getUID(), mobile: this.mobile, nikname: this.nikname };\n        this.updates.rider = true;\n        this.updates.newrider = true;\n      }\n    }\n    if (this.avatar) {\n      if (this.rider) {\n        this.rider.avatar = this.avatar;\n        this.updates.avatar = true;\n      } else {\n        this.rider = { id: this.authService.getUID(), mobile: this.mobile, nikname: this.nikname, avatar: this.avatar };\n        this.updates.rider = true;\n        this.updates.newrider = true;\n      }\n    }\n    console.log('Check this out!!');\n    if (this.checked && !this.rider.wallet) {\n      console.log(`generate wallet`);\n      console.log(this.wallet);\n      // generate new wallet\n      if (this.rider) {\n        this.rider.wallet = this.wallet;\n        this.updates.wallet = true;\n      } else {\n        // tslint:disable-next-line:max-line-length\n        this.rider = { id: this.authService.getUID(), mobile: this.mobile, nikname: this.nikname, avatar: this.avatar, wallet: this.wallet };\n        this.updates.rider = true;\n        this.updates.newrider = true;\n      }\n    }\n    if (this.updates.rider) {\n      if (this.updates.newrider) {\n        this.riderService.addNewRiderCB(this.rider, (err, ref) => {\n          if (err) {\n            this.msg = err;\n            this.progress = false;\n          } else {\n            this.progress = false;\n            this.updates.rider = true;\n            this.updates.newrider = false;\n            if (this.nikname) {\n              this.updates.nikname = true;\n            }\n            if (this.avatar) {\n              this.updates.avatar = true;\n            }\n            if (this.checked) {\n              this.updates.wallet = true;\n            }\n            this.msg = 'Profile is updated';\n          }\n        });\n      } else {\n        this.riderService.updateRiderByIdCB(this.rider, (err, ref) => {\n          if (err) {\n            this.msg = err;\n            this.progress = false;\n          } else {\n            this.progress = false;\n            this.updates.rider = true;\n            this.updates.newrider = false;\n            if (this.nikname) {\n              this.updates.nikname = true;\n            }\n            if (this.avatar) {\n              this.updates.avatar = true;\n            }\n            if (this.checked) {\n              this.updates.wallet = true;\n            }\n            this.msg = 'Profile is updated';\n          }\n        });\n      }\n    }\n  }\n  cancel() {\n    this.router.navigate([`/profile`]);\n  }\n\n  handleFileInput(files: FileList): void {\n    const file = files[0];\n    const filePath = `${this.authService.getUID()}/images/${file.name}`;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, file);\n\n    // observe percentage changes\n    this.uploadPercent = task.percentageChanges();\n    // get notified when the download URL is available\n    task.snapshotChanges()\n      .pipe(finalize(() => {\n        this.downloadURL = fileRef.getDownloadURL();\n        this.downloadURL.subscribe(url => this.avatar = url);\n      }))\n      .subscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-grid-list *ngIf=\\\"ride; else loading;\\\"cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n    \\n    <mat-grid-tile>\\n      <button (click)=\\\"gotoBack()\\\" mat-icon-button>\\n        <mat-icon>arrow_back_ios</mat-icon>\\n      </button>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile><h3>Ride details</h3></mat-grid-tile>\\n\\n    <mat-grid-tile></mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"ride.rider\\\"></mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"ride.rider\\\"><img *ngIf=\\\"ride.rider && ride.rider.avatar\\\" ngxGravatar size=\\\"46\\\" [fallback]=\\\"'monsterid'\\\" [src]=\\\"ride.rider.avatar\\\"></mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"ride.rider\\\"></mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"ride.rider\\\"></mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"ride.rider\\\"><strong>{{ride.rider?ride.rider.nikname:\\\"\\\"}}</strong></mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"ride.rider\\\"></mat-grid-tile>\\n\\n    <mat-grid-tile>Date:</mat-grid-tile>\\n\\n    <mat-grid-tile>{{ride.start|date:\\\"dd-MM-yyyy\\\"}}</mat-grid-tile>\\n\\n    <mat-grid-tile></mat-grid-tile>\\n\\n    <mat-grid-tile>Start:</mat-grid-tile>\\n\\n    <mat-grid-tile>{{ride.start|date:\\\"HH:mm:ss\\\"}}</mat-grid-tile>\\n\\n    <mat-grid-tile></mat-grid-tile>\\n\\n    <mat-grid-tile>Finish:</mat-grid-tile>\\n\\n    <mat-grid-tile>{{ride.finish|date:\\\"HH:mm:ss\\\"}}</mat-grid-tile>\\n\\n    <mat-grid-tile></mat-grid-tile>\\n    \\n    <mat-grid-tile>Time:</mat-grid-tile>\\n\\n    <mat-grid-tile>{{(ride.finish-ride.start)|date:\\\"HH:mm:ss\\\":\\\"+00\\\"}}</mat-grid-tile>\\n\\n    <mat-grid-tile></mat-grid-tile>\\n\\n\\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n        <button mat-stroked-button (click)=\\\"gotoTagById(ride.tagid)\\\">{{ride.tagid}}</button>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"uid === id\\\" [colspan]=\\\"3\\\">\\n        <button mat-raised-button [disabled]=\\\"progress || !(uid === id)\\\" (click)=\\\"updateRiderInfo()\\\" color=\\\"primary\\\">Update Rider Info</button>\\n    </mat-grid-tile>\\n\\n\\n</mat-grid-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { TagService } from '../tag.service';\nimport { Tag, Registration } from '../tag';\nimport { Ride } from '../ride';\nimport { Rider, Bike } from '../rider';\nimport { RideService } from '../ride.service';\nimport { RiderService } from '../rider.service';\nimport { AuthService } from '../auth.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-ride-detail',\n  templateUrl: './ride-detail.component.html',\n  styleUrls: ['./ride-detail.component.css']\n})\nexport class RideDetailComponent implements OnInit {\n\n  ride: Ride;\n  riders: Observable<Rider[]>;\n  uid: string;\n  progress: boolean;\n  rider: Rider;\n  id: string;\n\n  constructor(\n    private tagService: TagService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private router: Router,\n    private rideService: RideService,\n    private riderService: RiderService,\n    private authService: AuthService\n    ) {}\n\n  ngOnInit() {\n    this.progress = false;\n    const id = this.route.snapshot.paramMap.get('id');\n    this.rideService.getRideByIdCB(+id, (err, ride) => {\n      if (err) {\n        console.error(`RideDetailComponent: ngOnInit: ride not found ${id}`);\n      } else {\n        this.ride = ride;\n        this.id = ride.rider.id;\n        console.log(this.ride);\n      }\n    });\n    this.authService.getUser().subscribe((user) => {\n      this.uid = user.uid;\n      console.log(this.uid);\n      this.riders = this.riderService.getRiderById(this.uid);\n    });\n  }\n\n  gotoBack(): void {\n    this.location.back();\n  }\n\n  updateRiderInfo() {\n    this.progress = true;\n    this.riders.subscribe((riders) => {\n      if (riders && riders.length > 0) {\n        this.ride.rider = riders[0];\n        this.rideService.updateRideByIdCB(this.ride, (err, ref) => {\n          if (err) {\n            this.progress = false;\n            console.log(`RideDetailComponent: updateRiderInfo: ${err}`);\n          } else {\n            console.log(`RideDetailComponent: updateRiderInfo: rider info updated ${ref}`);\n          }\n        });\n      } else {\n        this.progress = false;\n      }\n    });\n  }\n\n  gotoTagById(id: string): void {\n    this.router.navigate([`/tag/${id}`]);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, QuerySnapshot, CollectionReference } from '@angular/fire/firestore';\nimport { Observable, BehaviorSubject, combineLatest  } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Rider, Bike } from './rider';\nimport { Ride } from './ride';\nimport { DatePipe } from '@angular/common';\nimport { CdkAccordion } from '@angular/cdk/accordion';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RideService {\n  db: AngularFirestore;\n  rides: Observable<Ride[]>;\n  ride: Observable<Ride[]>;\n  tagRides: Observable<Ride[]>;\n  number$: BehaviorSubject<number|null>;\n  start$: BehaviorSubject<string|null>;\n  order$: BehaviorSubject<string|null>;\n  where$: BehaviorSubject<string|null>;\n  tagid$: BehaviorSubject<string|null>;\n\n  constructor(private datePipe: DatePipe, db: AngularFirestore) {\n    this.db = db;\n    this.number$ = new BehaviorSubject(1000);\n    this.start$ = new BehaviorSubject(null);\n    this.order$ = new BehaviorSubject('time');\n    this.rides = combineLatest(this.number$, this.start$, this.order$).pipe(\n      switchMap(([num, start, order]) =>\n        db.collection<Ride>('rides', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        query = query.where('time', '>', 0);\n        if (num) { query = query.limit(num); }\n        if (order) { query = query.orderBy(order); if (start) { query = query.startAt(start); } }\n        return query;\n        }).valueChanges()\n    ));\n\n    this.where$ = new BehaviorSubject(null);\n    this.ride = combineLatest(this.where$).pipe(\n      switchMap(([where]) =>\n        db.collection<Ride>('rides', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        if (where) { query = query.where('tagid', '==', where); }\n        query = query.where('open', '==', true);\n        query = query.limit(1);\n        return query;\n        }).valueChanges()\n    ));\n\n    this.tagid$ = new BehaviorSubject(null);\n    this.tagRides = combineLatest(this.tagid$).pipe(\n      switchMap(([tagid]) =>\n        db.collection<Ride>('rides', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        query = query.where('tagid', '==', tagid);\n        query = query.orderBy('start');\n        return query;\n        }).valueChanges()\n    ));\n  }\n\n  getRides(): Observable<Ride[]> {\n    return this.rides;\n  }\n\n  setNumber(num: number|null) {\n    this.number$.next(num);\n  }\n\n  setStart(start: string|null) {\n    this.start$.next(start);\n  }\n\n  setOrder(order: string|null) {\n    this.order$.next(order);\n  }\n\n  getRideByTagId(tagid: string): Observable<Ride[]> {\n    this.where$.next(tagid);\n    return this.ride;\n  }\n\n  getRideByTagIdCB(tagid: string, cb: Function): void {\n    this.db.collection('rides').ref.where('tagid', '==', tagid)\n      .get()\n        .then(function(querySnapshot) {\n          if (querySnapshot.empty) {\n            cb(null);\n          } else {\n            cb(querySnapshot.docs[0]);\n          }\n        });\n  }\n\n  getRidesByTagId(tagid: string): Observable<Ride[]> {\n    this.tagid$.next(tagid);\n    return this.tagRides;\n  }\n\n  getRidesByTagIdCB(tagid: string, cb: Function): void {\n    this.db.collection('rides').ref.where('tagid', '==', tagid)\n      .get()\n        .then(function(querySnapshot) {\n          if (querySnapshot.empty) {\n            cb(null);\n          } else {\n            cb(querySnapshot.docs);\n          }\n        });\n  }\n\n  addNewRideCB(ride: Ride, cb: Function): void {\n    this.db.collection('rides').add(ride)\n      .then((ref) => cb(null, ref))\n      .catch((err) => cb(err, null));\n  }\n\n  updateRideByRefCB(ref: string, ride: Ride, cb: Function): void {\n    this.db.collection('rides').doc(ref).update(ride)\n      .then(() => cb(null))\n      .catch(err => cb(err));\n  }\n\n  updateRideByIdCB(ride: Ride, cb: Function): void {\n    this.db.collection('rides').ref.where('id', '==', ride.id)\n      .get()\n        .then((querySnapshot) => {\n          if (querySnapshot.empty) {\n            cb('not fount', null);\n          } else {\n            const doc = querySnapshot.docs[0];\n            this.db.collection('rides').doc(doc.id).update(ride)\n              .then(() => cb(null, doc.ref))\n              .catch((err) => cb(err, null));\n          }\n        });\n  }\n\n  getRideByIdCB(id: number, cb: Function): void {\n    this.db.collection('rides').ref.where('id', '==', id)\n      .get()\n        .then((querySnapshot) => {\n          if (querySnapshot.empty) {\n            cb('not fount', null);\n          } else {\n            const doc = querySnapshot.docs[0];\n            cb(null, doc.data());\n          }\n        });\n  }\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n  }\\n\\n  .mat-cell .mat-icon {\\n    -webkit-transform: scale(0.6);\\n            transform: scale(0.6);\\n}\"","module.exports = \"\\n<mat-grid-list  cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n    <mat-grid-tile>\\n        <button (click)=\\\"gotoBack()\\\" mat-icon-button>\\n            <mat-icon>arrow_back_ios</mat-icon>\\n        </button>\\n      </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n      <h3>Ride</h3>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <small>{{nikname}}</small>\\n    </mat-grid-tile>\\n  \\n  </mat-grid-list>\\n\\n<mat-accordion>\\n      <mat-expansion-panel (opened)=\\\"getTags()\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Tags\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Select tag to start a ride\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n    \\n        <span *ngFor=\\\"let tag of tags\\\">\\n            <button mat-stroked-button [disabled]=\\\"tagid === tag.id\\\" (click)=\\\"select(tag.id)\\\">{{tag.id}}</button>&nbsp;\\n        </span>\\n    \\n      </mat-expansion-panel>\\n  </mat-accordion>\\n\\n  <mat-grid-list *ngIf=\\\"ride; else loading\\\" cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n      <h3>Current Ride</h3>\\n    </mat-grid-tile>\\n  \\n    <mat-grid-tile>\\n      {{ride.start|date:\\\"dd-MM-yyyy\\\"}}\\n    </mat-grid-tile>\\n  \\n    <mat-grid-tile>\\n      {{ride.start|date:\\\"HH:mm:ss\\\"}}\\n    </mat-grid-tile>\\n  \\n    <mat-grid-tile *ngIf=\\\"!ride.finish\\\">\\n      {{timestemp|date:\\\"HH:mm:ss\\\":\\\"+00\\\"}}\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"ride.finish\\\">\\n        {{(ride.finish-ride.start)|date:\\\"HH:mm:ss\\\":\\\"+00\\\"}}\\n      </mat-grid-tile>\\n  </mat-grid-list>\\n\\n  <mat-grid-list  *ngIf=\\\"rides; else loading\\\" cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n      \\n      <mat-grid-tile  [rowspan] = \\\"2\\\" [colspan]=\\\"3\\\">\\n        <button *ngIf=\\\"!ride\\\" mat-stroked-button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"progress\\\" (click)=\\\"startRide($event)\\\">Start</button>\\n        <button *ngIf=\\\"ride\\\" mat-stroked-button mat-raised-button color=\\\"warn\\\" [disabled]=\\\"progress || !ride.open\\\" (click)=\\\"finishRide($event)\\\">End</button>\\n      </mat-grid-tile>\\n  </mat-grid-list>\\n  \\n  <div *ngIf=\\\"rides\\\">\\n      <table *ngIf=\\\"rides.length>0\\\" mat-table [dataSource]=\\\"rides | slice:start:end\\\" class=\\\"mat-elevation-z8\\\">\\n\\n          <!--- Note that these columns can be defined in any order.\\n                The actual rendered columns are set as a property on the row definition\\\" -->\\n        \\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"date\\\">\\n              <th mat-header-cell *matHeaderCellDef> Date </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.start|date:\\\"dd-MM-yyyy\\\"}}</td>\\n            </ng-container>\\n\\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"start\\\">\\n            <th mat-header-cell *matHeaderCellDef> Start </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.start|date:\\\"HH:mm:ss\\\"}}</td>\\n          </ng-container>\\n        \\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"finish\\\">\\n            <th mat-header-cell *matHeaderCellDef> Finish </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.finish|date:\\\"HH:mm:ss\\\"}}</td>\\n          </ng-container>\\n        \\n          <!-- Weight Column -->\\n          <ng-container matColumnDef=\\\"time\\\">\\n            <th mat-header-cell *matHeaderCellDef> Time </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{(element.finish-element.start)|date:\\\"HH:mm:ss\\\":\\\"+00\\\"}} </td>\\n          </ng-container>\\n        \\n          <!-- Weight Column -->\\n          <ng-container matColumnDef=\\\"link\\\">\\n              <th mat-header-cell *matHeaderCellDef> Details </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> <button (click)=\\\"gotoRide(element.id)\\\" mat-icon-button> <mat-icon>call_made</mat-icon></button> </td>\\n            </ng-container>\\n        \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n        <br>\\n        \\n    <mat-paginator *ngIf=\\\"rides.length>0\\\" [length]=\\\"rides.length\\\"\\n                  [pageSize]=\\\"10\\\"\\n                  [pageSizeOptions]=\\\"[1, 5, 10, 25, 100]\\\"\\n                  (page)=\\\"setPage($event)\\\">\\n    </mat-paginator>\\n  </div>\\n\\n\"","import { Component, OnInit, OnDestroy, AfterViewInit, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { TagService } from '../tag.service';\nimport { AuthService } from '../auth.service';\nimport { RiderService } from '../rider.service';\nimport { RideService } from '../ride.service';\nimport { Rider, Bike} from '../rider';\nimport { Ride } from '../ride';\nimport { Tag } from '../tag';\nimport { PageEvent } from '@angular/material';\nimport { DatePipe } from '@angular/common';\nimport { Subscription, Observable, timer } from 'rxjs';\nimport { Parameters, RideParameters } from '../parameters';\n\n@Component({\n  selector: 'app-ride',\n  templateUrl: './ride.component.html',\n  styleUrls: ['./ride.component.css'],\n  providers: [RideParameters]\n})\nexport class RideComponent implements OnInit, OnDestroy {\n  rider: Rider;\n  rides: Ride[];\n  ride: Ride;\n  tags: Tag[];\n  tagid: string;\n  start: number;\n  end: number;\n  progress: boolean;\n  timestemp: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n  ref: string;\n  nikname: string;\n  avatar: string;\n\n  displayedColumns: string[] = ['date', 'start', 'finish', 'time', 'link'];\n\n  private timer: Observable<number>;\n  private timer_subs: Subscription;\n  private rides_subs: Subscription;\n  private ride_subs: Subscription;\n  private tags_subs: Subscription;\n  private rider_subs: Subscription;\n\n  constructor(\n    private zone: NgZone,\n    private tagService: TagService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private riderService: RiderService,\n    private rideService: RideService,\n    private datePipe: DatePipe,\n    private location: Location,\n    private param: RideParameters\n    ) { console.log(this.param); }\n\n  ngOnInit() {\n    this.clear();\n    this.getTags();\n    this.getRider();\n  }\n  ngOnDestroy() {\n    if (this.tags_subs) { this.tags_subs.unsubscribe(); }\n    if (this.rides_subs) { this.rides_subs.unsubscribe(); }\n    if (this.ride_subs) { this.ride_subs.unsubscribe(); }\n    if (this.timer_subs) { this.timer_subs.unsubscribe(); }\n    if (this.rider_subs) { this.rider_subs.unsubscribe(); }\n  }\n\n  clear() {\n    this.tagid = null;\n    this.start = 0;\n    this.end = 10;\n    this.progress = false;\n  }\n\n  gotoRide(id: number): void {\n    this.router.navigate([`/ride/${id}`]);\n  }\n\n  getTags(): void {\n    this.tags_subs = this.tagService.getTagsByMobile(this.authService.getUserPhone())\n      .subscribe(tags => this.tags = tags);\n  }\n\n  getRider(): void {\n    this.rider_subs = this.riderService.getRiderByMobile(this.authService.getUserPhone())\n    .subscribe(riders => {\n      if (riders) {\n        if (riders.length > 0) {\n          this.rider = riders[0];\n          this.nikname = this.rider.nikname;\n          this.avatar = this.rider.avatar;\n        }\n      }\n     });\n  }\n\n  getRides(): void {\n    this.rides_subs = this.rideService.getRidesByTagId(this.tagid)\n      .subscribe(rides => this.rides = rides);\n  }\n\n  getRide(): void {\n    this.ride_subs = this.rideService.getRideByTagId(this.tagid)\n      .subscribe(rides => {\n        if (rides.length > 0) {\n          this.ride = rides[0];\n          this.timer = timer(0, 1000);\n          this.timer_subs = this.timer.subscribe(t => {\n            this.timestemp = new Date().getTime() - this.ride.start;\n            this.hours = Math.floor(this.timestemp / 1000 / 60 / 60);\n            this.minutes = Math.floor(this.timestemp / 1000 / 60 );\n            this.seconds = Math.floor(this.timestemp / 1000 );\n          });\n        }\n      });\n  }\n\n  select(tagid: string) {\n    this.tagid = tagid;\n    this.getRides();\n    this.getRide();\n  }\n\n  setPage(e: PageEvent): void {\n    console.log(e);\n    const { pageIndex, pageSize } = e;\n    this.start = pageIndex * pageSize;\n    this.end = this.start + pageSize;\n  }\n\n  startRide(e: Event): void {\n    if (!this.tagid) {\n      return;\n    }\n    this.progress = true;\n    e.preventDefault();\n    e.stopPropagation();\n    const start = new Date().getTime();\n    const tagid = this.tagid;\n    const id = Math.random() * 1000 + start;\n    const open = true;\n    const rider = this.rider;\n    let ride: Ride;\n    if (rider) {\n      ride = { id, tagid, start, open, rider };\n    } else {\n      ride = { id, tagid, start, open };\n    }\n    this.rideService.addNewRideCB(ride, (err, ref) => {\n      if (err) {\n        this.progress = false;\n        console.error(err);\n      } else {\n        this.progress = false;\n        this.getRides();\n      }\n    });\n  }\n\n  finishRide(e: Event): void {\n    this.progress = true;\n    e.preventDefault();\n    e.stopPropagation();\n    const finish = new Date().getTime();\n    this.ride.finish = finish;\n    this.ride.open = false;\n    const time = finish - this.ride.start;\n    if (time > this.param.mintime && time < this.param.maxtime) {\n      this.ride.time = time;\n      console.log(`RideComponent: finishRide: record ride time: ${time}`);\n    } else {\n      this.ride.time = 0;\n      console.log(`RideComponent: finishRide: ride time: ${time} is out of range [${this.param.mintime}, ${this.param.maxtime}]`);\n    }\n    this.rideService.updateRideByIdCB(this.ride, (err, ref) => {\n      if (err) {\n        this.progress = false;\n        console.error(err);\n      } else {\n        this.progress = false;\n        this.getRides();\n      }\n    });\n  }\n\n  gotoBack(): void {\n    this.location.back();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, QuerySnapshot, CollectionReference } from '@angular/fire/firestore';\nimport { Observable, BehaviorSubject, combineLatest  } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Rider, Bike } from './rider';\nimport { DatePipe } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RiderService {\n  db: AngularFirestore;\n  riders: Observable<Rider[]>;\n  rider: Observable<Rider[]>;\n  userRider: Observable<Rider[]>;\n  number$: BehaviorSubject<number|null>;\n  start$: BehaviorSubject<string|null>;\n  order$: BehaviorSubject<string|null>;\n  where$: BehaviorSubject<string|null>;\n  mobile$: BehaviorSubject<string|null>;\n\n  constructor(private datePipe: DatePipe, db: AngularFirestore) {\n    this.db = db;\n    this.number$ = new BehaviorSubject(1000);\n    this.start$ = new BehaviorSubject(null);\n    this.order$ = new BehaviorSubject('id');\n    this.riders = combineLatest(this.number$, this.start$, this.order$).pipe(\n      switchMap(([num, start, order]) =>\n        db.collection<Rider>('riders', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        if (num) { query = query.limit(num); }\n        if (order) { query = query.orderBy(order); if (start) { query = query.startAt(start); } }\n        return query;\n        }).valueChanges()\n    ));\n\n    this.where$ = new BehaviorSubject(null);\n    this.rider = combineLatest(this.where$).pipe(\n      switchMap(([where]) =>\n        db.collection<Rider>('riders', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        if (where) { query = query.where('id', '==', where); }\n        query = query.limit(1);\n        return query;\n        }).valueChanges()\n    ));\n\n    this.mobile$ = new BehaviorSubject(null);\n    this.userRider = combineLatest(this.mobile$).pipe(\n      switchMap(([mobile]) =>\n        db.collection<Rider>('riders', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        query = query.where('mobile', '==', mobile);\n        return query;\n        }).valueChanges()\n    ));\n  }\n\n  getRiders(): Observable<Rider[]> {\n    return this.riders;\n  }\n\n  setNumber(num: number|null) {\n    this.number$.next(num);\n  }\n\n  setStart(start: string|null) {\n    this.start$.next(start);\n  }\n\n  setOrder(order: string|null) {\n    this.order$.next(order);\n  }\n\n  getRiderById(id: string): Observable<Rider[]> {\n    this.where$.next(id);\n    return this.rider;\n  }\n\n  getRiderByIdCB(id: string, cb: Function): void {\n    this.db.collection('riders').ref.where('id', '==', id)\n      .get()\n        .then(function(querySnapshot) {\n          if (querySnapshot.empty) {\n            cb(null);\n          } else {\n            cb(querySnapshot.docs[0]);\n          }\n        });\n  }\n\n  getRiderByMobile(mobile: string): Observable<Rider[]> {\n    this.mobile$.next(mobile);\n    return this.userRider;\n  }\n\n  getRiderByMobileCB(mobile: string, cb: Function): void {\n    this.db.collection('riders').ref.where('mobile', '==', mobile)\n      .get()\n        .then(function(querySnapshot) {\n          if (querySnapshot.empty) {\n            cb(null);\n          } else {\n            cb(querySnapshot.docs[0]);\n          }\n        });\n  }\n\n  addNewRiderCB(rider: Rider, cb: Function): void {\n    this.db.collection('riders').add(rider)\n      .then((ref) => cb(null, ref))\n      .catch((err) => cb(err, null));\n  }\n\n  updateRiderByIdCB(rider: Rider, cb: Function): void {\n    this.db.collection('riders').ref.where('id', '==', rider.id)\n      .get()\n        .then((querySnapshot) => {\n          if (querySnapshot.empty) {\n            console.error(`RiderService: updateRiderByIdCB: rider not found for id ${rider.id}`);\n            cb(`RiderService: updateRiderByIdCB: rider not found for id ${rider.id}`, null);\n          } else {\n            const doc = querySnapshot.docs[0];\n            // update tag doc\n            console.log(`RiderService: updateRiderByIdCB: updating rider for id: ${rider.id}`);\n            this.db.collection('riders').doc(doc.id).update(rider);\n            cb(null, doc);\n          }\n        });\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n      <h3>SMS confirmation</h3>\\n    </mat-grid-tile>\\n    \\n</mat-grid-list>\\n\\n<form class=\\\"example-form\\\">\\n\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n\\n    <mat-grid-tile [rowspan]=\\\"3\\\" [colspan]=\\\"3\\\">\\n      <mat-form-field>\\n        <input matInput name=\\\"smscode\\\" type=\\\"text\\\" placeholder=\\\"Enter sms code\\\" required minlenght=\\\"6\\\" [(ngModel)]=\\\"smscode\\\">\\n      </mat-form-field>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n      {{msg}}\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!smscode || progress\\\" (click)=\\\"confirm($event)\\\">Confirm</button>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n      <button mat-raised-button color=\\\"warn\\\" [disabled]=\\\"!smscode || progress\\\" (click)=\\\"clear()\\\">Clear</button>\\n    </mat-grid-tile>\\n  \\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n    </mat-grid-tile>\\n\\n  </mat-grid-list>\\n</form>\\n\\n\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { TagService } from '../tag.service';\nimport { Tag, Registration } from '../tag';\nimport * as firebase from 'firebase/app';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-sms-confirmation',\n  templateUrl: './sms-confirmation.component.html',\n  styleUrls: ['./sms-confirmation.component.css']\n})\nexport class SmsConfirmationComponent implements OnInit {\n  mobile: string;\n  smscode: string;\n  msg: string;\n  progress: boolean;\n\n  constructor(\n    private zone: NgZone,\n    private tagService: TagService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.clear();\n    this.getMobile();\n  }\n\n  clear() {\n    this.smscode = null;\n    this.msg = null;\n    this.progress = false;\n  }\n\n  getMobile(): void {\n    this.mobile = this.route.snapshot.paramMap.get('mobile');\n  }\n\n  confirm(e: Event): void {\n    this.progress = true;\n    e.preventDefault();\n    e.stopPropagation();\n    this.authService.getConfirmation(this.smscode, (error, user) => {\n      if (error) {\n        this.msg = error;\n        this.progress = false;\n      } else {\n        console.log(user);\n        // registration is confirmed move to client profile\n        this.zone.run(() => this.router.navigate([`/profile`]))\n          .then(() => console.log('SmsConfirmationComponent: confirm: navigated to profile'))\n          .catch((err) => console.error(err));\n      }\n    });\n  }\n\n}\n","module.exports = \".example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n}\\n  \\n.example-full-width {\\n    width: 100%;\\n}\\n  \\n.example-short {\\n    width: 30%;\\n}\\n  \\n.example-half {\\n    width: 50%;\\n}\\n  \\ntable {\\n    width: 100%;\\n  }\\n  \\n.mat-cell .mat-icon {\\n    -webkit-transform: scale(0.6);\\n            transform: scale(0.6);\\n}\"","module.exports = \"<mat-grid-list *ngIf=\\\"tags; else loading;\\\"cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n    \\n    <mat-grid-tile>\\n        <button (click)=\\\"gotoBack()\\\" mat-icon-button>\\n            <mat-icon>arrow_back_ios</mat-icon>\\n        </button>\\n      </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n      <h3>Tag details</h3>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        \\n      </mat-grid-tile>\\n\\n    <mat-grid-tile  *ngIf=\\\"tags.length > 0\\\" [colspan]=\\\"3\\\">\\n        <h3>{{tags[0].id}}</h3>\\n      </mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"tags.length > 0\\\">\\n        Registered:\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [colspan]=\\\"2\\\" *ngIf=\\\"tags.length > 0\\\">\\n        {{tags[0].regDate}}\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"tags.length > 0 && tags[0].reg\\\">\\n        Mobile:\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [colspan]=\\\"2\\\" *ngIf=\\\"tags.length > 0 && tags[0].reg\\\">\\n        {{tags[0].reg.mobile}}\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"tags.length > 0 && tags[0].reg\\\">\\n        SMS code:\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [colspan]=\\\"2\\\" *ngIf=\\\"tags.length > 0 && tags[0].reg\\\">\\n        {{tags[0].reg.sms}}\\n    </mat-grid-tile>\\n    \\n</mat-grid-list>\\n\\n<div *ngIf=\\\"rides\\\">\\n    <table *ngIf=\\\"rides.length>0\\\" mat-table [dataSource]=\\\"rides | slice:start:end\\\" class=\\\"mat-elevation-z8\\\">\\n\\n        <!--- Note that these columns can be defined in any order.\\n              The actual rendered columns are set as a property on the row definition\\\" -->\\n      \\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"date\\\">\\n            <th mat-header-cell *matHeaderCellDef> Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.start|date:\\\"dd-MM-yyyy\\\"}}</td>\\n          </ng-container>\\n\\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"start\\\">\\n          <th mat-header-cell *matHeaderCellDef> Start </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.start|date:\\\"HH:mm:ss\\\"}}</td>\\n        </ng-container>\\n      \\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"finish\\\">\\n          <th mat-header-cell *matHeaderCellDef> Finish </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.finish|date:\\\"HH:mm:ss\\\"}}</td>\\n        </ng-container>\\n      \\n        <!-- Weight Column -->\\n        <ng-container matColumnDef=\\\"time\\\">\\n          <th mat-header-cell *matHeaderCellDef> Time </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{(element.finish-element.start)|date:\\\"HH:mm:ss\\\":\\\"+00\\\"}} </td>\\n        </ng-container>\\n\\n        <!-- Weight Column -->\\n        <ng-container matColumnDef=\\\"link\\\">\\n            <th mat-header-cell *matHeaderCellDef> Details </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> <button (click)=\\\"gotoRide(element.id)\\\" mat-icon-button> <mat-icon>call_made</mat-icon></button> </td>\\n          </ng-container>\\n      \\n      \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n      <br>\\n      \\n  <mat-paginator *ngIf=\\\"rides.length>0\\\" [length]=\\\"rides.length\\\"\\n                [pageSize]=\\\"10\\\"\\n                [pageSizeOptions]=\\\"[1, 5, 10, 25, 100]\\\"\\n                (page)=\\\"setPage($event)\\\">\\n  </mat-paginator>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { TagService } from '../tag.service';\nimport { Tag, Registration } from '../tag';\nimport { Ride } from '../ride';\nimport { RideService } from '../ride.service';\nimport { PageEvent } from '@angular/material';\n\n@Component({\n  selector: 'app-tag-detail',\n  templateUrl: './tag-detail.component.html',\n  styleUrls: ['./tag-detail.component.css']\n})\nexport class TagDetailComponent implements OnInit {\n  tags: Tag[];\n  rides: Ride[];\n  start: number;\n  end: number;\n\n  displayedColumns: string[] = ['date', 'start', 'finish', 'time', 'link'];\n\n  constructor(\n    private tagService: TagService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private router: Router,\n    private rideService: RideService\n    ) {}\n\n  ngOnInit() {\n    this.start = 0;\n    this.end = 10;\n    this.getTag();\n  }\n\n  getTag(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.tagService.getTagById(id)\n      .subscribe(tags => this.tags = tags);\n    this.rideService.getRidesByTagId(id)\n      .subscribe(rides => this.rides = rides);\n  }\n\n  gotoTags(): void {\n    this.router.navigate([`/tags`]);\n  }\n\n  gotoBack(): void {\n    this.location.back();\n  }\n\n  gotoRide(id: number): void {\n    this.router.navigate([`/ride/${id}`]);\n  }\n\n  setPage(e: PageEvent): void {\n    console.log(e);\n    const { pageIndex, pageSize } = e;\n    this.start = pageIndex * pageSize;\n    this.end = this.start + pageSize;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"tags; else loading\\\">\\n    <h2 *ngIf=\\\"tags.length === 0\\\">Tag not found</h2>\\n    <div *ngIf=\\\"tags.length > 0\\\">\\n      <h2>Tag Registration</h2>\\n      <div><span>id: </span>{{tags[0].id}}</div>\\n    </div>\\n    <br><br>\\n\\n    <form class=\\\"example-form\\\">\\n      <table class=\\\"example-half\\\" cellspacing=\\\"0\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput name=\\\"smscode\\\" type=\\\"text\\\" placeholder=\\\"Enter sms code\\\" required minlength=\\\"4\\\" [(ngModel)]=\\\"smscode\\\">\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr *ngIf=\\\"msg\\\">\\n          <td>\\n            {{msg}}\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!smscode || registered || progress\\\" (click)=\\\"confirm($event)\\\">Confirm</button>\\n          </td>\\n          <td>\\n            <button mat-raised-button color=\\\"warn\\\" [disabled]=\\\"!smscode || registered || progress\\\" (click)=\\\"gotoBack()\\\">Cancel</button>\\n          </td>\\n        </tr>\\n      </table>\\n    </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TagService } from '../tag.service';\nimport { Tag, Registration } from '../tag';\nimport { Location } from '@angular/common';\nimport { AuthService } from '../auth.service';\nimport { Wallet } from '../wallet';\n\n@Component({\n  selector: 'app-tag-reg-sms',\n  templateUrl: './tag-reg-sms.component.html',\n  styleUrls: ['./tag-reg-sms.component.css'],\n})\nexport class TagRegSmsComponent implements OnInit {\n  tags: Tag[];\n  smscode: string;\n  msg: string;\n  recaptchaVerifier: any;\n  registered: boolean;\n  progress: boolean;\n  tagid: string;\n  mobile: string;\n\n  constructor(\n    private tagService: TagService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private router: Router\n    ) {}\n\n  ngOnInit() {\n    this.getTag();\n    this.clear();\n  }\n  clear() {\n    this.smscode = null;\n    this.msg = null;\n    this.registered = false;\n    this.progress = false;\n  }\n\n  getTag(): void {\n    this.tagid = this.route.snapshot.paramMap.get('id');\n    this.mobile = this.route.snapshot.paramMap.get('mobile');\n    this.tagService.getTagById(this.tagid)\n      .subscribe(tags => this.tags = tags);\n  }\n\n  gotoBack(): void {\n    this.router.navigate([`/reg`]);\n  }\n\n  confirm(e: Event): void {\n    this.progress = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    const reg: Registration = {\n      mobile: this.mobile,\n      sms: '******'\n    };\n\n    this.authService.getConfirmation(this.smscode, (error, user) => {\n      if (error) {\n        this.msg = error;\n        this.progress = false;\n      } else {\n        console.log(user);\n        // registration is confirmed\n        if (this.tags[0]) {\n          console.log(`TagRegSmsComponent: confirm: seting reg date for ${this.tags[0].id}`);\n          this.tagService.setRegDate(this.tags[0].id, (err, doc) => {\n            if (err) {\n              this.msg = err;\n              this.progress = false;\n              this.registered = false;\n            } else {\n              this.msg = `Tag registration date updated`;\n              this.progress = false;\n              this.registered = true;\n              this.router.navigate([`/profile`]);\n            }\n          });\n        } else {\n          console.log(`TagRegSmsComponent: confirm: adding new tag with id ${this.tagid}`);\n          this.tagService.setRegistration(this.tagid, null, reg);\n          this.msg = `Tag is registered`;\n          this.progress = false;\n          this.registered = true;\n          this.router.navigate([`/profile`]);\n        }\n      }\n    });\n  }\n}\n","module.exports = \"h4 {\\n    text-align: center;\\n  }\\n\\np {\\n    text-align: center;\\n}\"","module.exports = \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n\\n  <mat-grid-tile>\\n    <button (click)=\\\"gotoBack()\\\" mat-icon-button>\\n      <mat-icon>arrow_back_ios</mat-icon>\\n    </button>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile><h3>Tag registration</h3></mat-grid-tile>\\n\\n  <mat-grid-tile></mat-grid-tile>\\n\\n  <mat-grid-tile [colspan]=\\\"3\\\" [rowspan]=\\\"2\\\">\\n    <h4 >Please enter mobile phone number and unique tag ID to recieve SMS registration code</h4>\\n  </mat-grid-tile>\\n  <mat-grid-tile [colspan]=\\\"3\\\">\\n    <h4>Don't have a tag?</h4> \\n  </mat-grid-tile>\\n\\n  <mat-grid-tile></mat-grid-tile>\\n\\n  <mat-grid-tile >\\n      <button (click)=\\\"generate()\\\" mat-icon-button>\\n          <mat-icon>get_app</mat-icon>\\n        </button>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile></mat-grid-tile>\\n    \\n</mat-grid-list>\\n\\n<form class=\\\"example-form\\\">\\n\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n\\n    <mat-grid-tile [rowspan]=\\\"2\\\" [colspan]=\\\"3\\\">\\n      <mat-form-field>\\n        <input matInput name=\\\"tagid\\\" type=\\\"text\\\" placeholder=\\\"Enter tag id\\\" required minlength=\\\"14\\\" [(ngModel)]=\\\"tagid\\\">\\n        <mat-hint align=\\\"start\\\">Example: <strong>12345678901234</strong> </mat-hint>\\n      </mat-form-field>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [rowspan]=\\\"2\\\" [colspan]=\\\"3\\\">\\n      <mat-form-field>\\n        <input matInput name=\\\"mobile\\\" type=\\\"text\\\" placeholder=\\\"Enter mobile\\\" required minlenght=\\\"7\\\" [(ngModel)]=\\\"mobile\\\">\\n        <mat-hint align=\\\"start\\\">Example: <strong>+16505551234</strong> </mat-hint>\\n      </mat-form-field>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n      {{msg}}\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!tagid || !mobile || progress\\\" (click)=\\\"reg($event)\\\">Register</button>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile>\\n        <button mat-raised-button color=\\\"warn\\\" [disabled]=\\\"!tagid || !mobile || progress\\\" (click)=\\\"clear()\\\">Clear</button>\\n    </mat-grid-tile>\\n  \\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n    </mat-grid-tile>\\n\\n  </mat-grid-list>\\n</form>\\n\\n<div id=\\\"recaptcha-container\\\"></div>\"","import { Component, OnInit, AfterViewInit, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { TagService } from '../tag.service';\nimport { Tag, Registration } from '../tag';\nimport * as firebase from 'firebase/app';\nimport { AuthService } from '../auth.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-tag-registration',\n  templateUrl: './tag-registration.component.html',\n  styleUrls: ['./tag-registration.component.css'],\n})\nexport class TagRegistrationComponent implements OnInit, AfterViewInit {\n  tagid: string;\n  mobile: string;\n  msg: string;\n  recaptchaVerifier: any;\n  progress: boolean;\n\n  constructor(\n    private zone: NgZone,\n    private tagService: TagService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location\n    ) { }\n\n  ngAfterViewInit() {\n    // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    // Add 'implements AfterViewInit' to the class.\n    this.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n  }\n\n  ngOnInit() {\n    this.clear();\n  }\n  clear() {\n    this.tagid = null;\n    this.mobile = null;\n    this.msg = null;\n    this.progress = false;\n  }\n\n  reg(e: Event) {\n    this.progress = true;\n    e.preventDefault();\n    e.stopPropagation();\n    this.authService.signInWithPhoneNumber(this.mobile, this.recaptchaVerifier, (error, confirmationResult) => {\n      if (error) {\n        console.error(`TagRegistrationComponent: reg: ${error}`);\n        this.msg = error;\n        this.progress = false;\n      } else {\n        // I've got a confirmation object, lets go to the SMS confirmation screen\n        // Need to use NgZone.run to go back to Angular zone exec env\n        this.zone.run(() => this.router.navigate([`/regsms/${this.tagid}/${this.mobile}`]))\n          .then(() => console.log('TagRegistrationComponent: reg: navigated to regsms'))\n          .catch((err) => console.error(err));\n        console.log(`TagRegistrationComponent: reg: confirmation for ${this.mobile}`);\n        console.log(confirmationResult);\n      }\n    });\n  }\n\n  gotoBack(): void {\n    this.location.back();\n  }\n\n  generate(): void {\n    let tagid = Math.random();\n    tagid = tagid * 1e14;\n    tagid = Math.floor(tagid);\n    this.tagid = tagid.toString();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, QuerySnapshot, CollectionReference } from '@angular/fire/firestore';\nimport { Observable, BehaviorSubject, combineLatest  } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Tag, Registration } from './tag';\nimport { DatePipe } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagService {\n  db: AngularFirestore;\n  tags: Observable<Tag[]>;\n  tag: Observable<Tag[]>;\n  userTags: Observable<Tag[]>;\n  number$: BehaviorSubject<number|null>;\n  start$: BehaviorSubject<string|null>;\n  order$: BehaviorSubject<string|null>;\n  where$: BehaviorSubject<string|null>;\n  mobile$: BehaviorSubject<string|null>;\n\n  constructor(private datePipe: DatePipe, db: AngularFirestore) {\n    this.db = db;\n    this.number$ = new BehaviorSubject(1000);\n    this.start$ = new BehaviorSubject(null);\n    this.order$ = new BehaviorSubject('id');\n    this.tags = combineLatest(this.number$, this.start$, this.order$).pipe(\n      switchMap(([num, start, order]) =>\n        db.collection<Tag>('tags', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        if (num) { query = query.limit(num); }\n        if (order) { query = query.orderBy(order); if (start) { query = query.startAt(start); } }\n        return query;\n        }).valueChanges()\n    ));\n\n    this.where$ = new BehaviorSubject(null);\n    this.tag = combineLatest(this.where$).pipe(\n      switchMap(([where]) =>\n        db.collection<Tag>('tags', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        if (where) { query = query.where('id', '==', where); }\n        query = query.limit(1);\n        return query;\n        }).valueChanges()\n    ));\n\n    this.mobile$ = new BehaviorSubject(null);\n    this.userTags = combineLatest(this.mobile$).pipe(\n      switchMap(([mobile]) =>\n        db.collection<Tag>('tags', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        query = query.where('reg.mobile', '==', mobile);\n        return query;\n        }).valueChanges()\n    ));\n  }\n\n  getTagById(id: string): Observable<Tag[]> {\n    this.where$.next(id);\n    return this.tag;\n  }\n\n  getTagByIdCB(id: string, cb: Function): void {\n    this.db.collection('tags').ref.where('id', '==', id)\n      .get()\n        .then(function(querySnapshot) {\n          if (querySnapshot.empty) {\n            cb(null);\n          } else {\n            cb(querySnapshot.docs[0]);\n          }\n        });\n  }\n\n  getTagsByMobile(mobile: string): Observable<Tag[]> {\n    this.mobile$.next(mobile);\n    return this.userTags;\n  }\n\n  setRegistration(id: string, docRef: string, reg: Registration): void {\n    const regDate = this.datePipe.transform(new Date(), 'dd-MM-yy');\n    if (docRef) {\n      console.log(`TagService: update tag ref: ${docRef} and id: ${id}`);\n      this.db.collection('tags').doc(docRef).update({ reg });\n    } else {\n      console.log(`TagService: add new tag ${id}`);\n      this.db.collection('tags').add({ id, regDate, reg });\n    }\n  }\n\n  setRegDate(id: string, cb: Function): void {\n    this.db.collection('tags').ref.where('id', '==', id)\n      .get()\n        .then((querySnapshot) => {\n          if (querySnapshot.empty) {\n            console.error(`TagService: setRegDate: tag not found for id ${id}`);\n            cb(`TagService: setRegDate: tag not found for id ${id}`, null);\n          } else {\n            const doc = querySnapshot.docs[0];\n            const regDate = this.datePipe.transform(new Date(), 'dd-MM-yy');\n            // update tag doc\n            console.log(`TagService: setRegDate: set regDate: ${regDate} for id: ${id}`);\n            this.db.collection('tags').doc(doc.id).update({ regDate });\n            cb(null, doc);\n          }\n        });\n  }\n\n  getTags(): Observable<Tag[]> {\n    return this.tags;\n  }\n\n  setNumber(num: number|null) {\n    this.number$.next(num);\n  }\n\n  setStart(start: string|null) {\n    this.start$.next(start);\n  }\n\n  setOrder(order: string|null) {\n    this.order$.next(order);\n  }\n}\n","module.exports = \".example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n}\\n  \\n.example-full-width {\\n    width: 100%;\\n}\\n  \\n.example-short {\\n    width: 30%;\\n}\\n  \\n.example-half {\\n    width: 50%;\\n}\"","module.exports = \"<mat-grid-list *ngIf=\\\"tags; else loading\\\" cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n    <mat-grid-tile [colspan]=\\\"3\\\">\\n      <h3>Tags list</h3>\\n    </mat-grid-tile>\\n    <mat-grid-tile *ngFor=\\\"let tag of tags | slice:start:end\\\" [colspan]=\\\"3\\\">\\n      <button mat-stroked-button (click)=\\\"gotoTagById(tag)\\\">{{tag.id}}</button>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n\\n<mat-paginator *ngIf=\\\"tags; else loading\\\" [length]=\\\"tags.length\\\"\\n              [pageSize]=\\\"10\\\"\\n              [pageSizeOptions]=\\\"[1, 5, 10, 25, 100]\\\"\\n              (page)=\\\"setPage($event)\\\">\\n</mat-paginator>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { PageEvent } from '@angular/material';\nimport { TagService } from '../tag.service';\nimport { Tag } from '../tag';\n\n@Component({\n  selector: 'app-tags',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.css']\n})\nexport class TagsComponent implements OnInit {\n  tags: Tag[];\n  start: number;\n  end: number;\n  constructor(private tagService: TagService, private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit() {\n    this.getTags();\n    this.clear();\n  }\n\n  clear() {\n    this.start = 0;\n    this.end = 10;\n  }\n\n  getTags(): void {\n    this.tagService.getTags()\n        .subscribe(tags => this.tags = tags);\n  }\n\n  gotoTagById(tag: Tag): void {\n    const tagId = tag ? tag.id : null;\n    this.router.navigate([`/tag/${tagId}`]);\n  }\n\n  setPage(e: PageEvent): void {\n    console.log(e);\n    const { pageIndex, pageSize } = e;\n    this.start = pageIndex * pageSize;\n    this.end = this.start + pageSize;\n  }\n}\n","module.exports = \".example-headers-align .mat-expansion-panel-header-title,\\n.example-headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0;\\n}\\n\\n.example-headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\"","module.exports = \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n\\n  <mat-grid-tile>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile>\\n    <h3>Profile</h3>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile *ngIf=\\\"name()\\\">\\n    Name\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile *ngIf=\\\"name()\\\">\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile *ngIf=\\\"name()\\\">\\n    {{name()}}\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile *ngIf=\\\"phone()\\\">\\n    Mobile\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile *ngIf=\\\"phone()\\\">\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile *ngIf=\\\"phone()\\\">\\n    {{phone()}}\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile *ngIf=\\\"rider\\\">\\n      Nikname\\n    </mat-grid-tile>\\n  \\n    <mat-grid-tile *ngIf=\\\"rider\\\">\\n    </mat-grid-tile>\\n  \\n    <mat-grid-tile *ngIf=\\\"rider\\\">\\n      {{rider.nikname}}\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile [colspan]=\\\"3\\\" *ngIf=\\\"wallet\\\">\\n        <h3>Wallet</h3>\\n      </mat-grid-tile>\\n\\n    <mat-grid-tile [colspan]=\\\"3\\\" *ngIf=\\\"wallet\\\">\\n        {{account}}\\n      </mat-grid-tile>\\n    \\n      <mat-grid-tile [colspan]=\\\"3\\\" *ngIf=\\\"wallet\\\">\\n        {{balance}} Ether\\n      </mat-grid-tile>\\n    \\n\\n</mat-grid-list>\\n\\n<mat-accordion>\\n    <mat-expansion-panel (opened)=\\\"getTags()\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Tags\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          Open to see your tags\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n  \\n      <span *ngFor=\\\"let tag of tags\\\">\\n          <button mat-stroked-button (click)=\\\"gotoTagById(tag)\\\">{{tag.id}}</button>&nbsp;\\n      </span>\\n  \\n    </mat-expansion-panel>\\n</mat-accordion>\\n  \\n<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3em\\\">\\n\\n  <mat-grid-tile [colspan]=\\\"3\\\">\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile *ngIf=\\\"authenticated()\\\">\\n    <button mat-raised-button color=\\\"warn\\\" [disabled]=\\\"!authenticated()\\\" (click)=\\\"logout()\\\">Logout</button>\\n  </mat-grid-tile>\\n  \\n  <mat-grid-tile *ngIf=\\\"authenticated()\\\">\\n    \\n  </mat-grid-tile>\\n  \\n  <mat-grid-tile *ngIf=\\\"authenticated()\\\">\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!authenticated()\\\" (click)=\\\"gotoUpdate()\\\">Update</button>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile *ngIf=\\\"!authenticated()\\\" [colspan]=\\\"3\\\">\\n    No user logged in\\n  </mat-grid-tile>\\n\\n</mat-grid-list>\\n\\n\\n  \"","import { Component, OnInit, AfterViewInit, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { TagService } from '../tag.service';\nimport { Tag, Registration } from '../tag';\nimport * as firebase from 'firebase/app';\nimport { AuthService } from '../auth.service';\nimport { TrustedScriptString } from '@angular/core/src/sanitization/bypass';\nimport { routerNgProbeToken } from '@angular/router/src/router_module';\nimport { RiderService } from '../rider.service';\nimport { Rider, Bike } from '../rider';\nimport { Wallet } from '../wallet';\nimport { EthcontractService } from '../ethereum/ethcontract.service';\nimport { Observable, of } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css'],\n  providers: [TagService]\n})\nexport class UserProfileComponent implements OnInit, AfterViewInit {\n  tags: Tag[];\n  rider: Rider;\n  wallet: Wallet;\n  balance: string;\n  account: string;\n  constructor(\n    private tagService: TagService,\n    private authService: AuthService,\n    private riderService: RiderService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private contractService: EthcontractService,\n    private zone: NgZone\n    ) { }\n\n  ngOnInit() {\n    this.riderService.getRiderByMobile(this.authService.getUserPhone())\n      .subscribe(riders => {\n        if (riders) {\n          if (riders.length > 0) {\n            this.rider = riders[0];\n            this.wallet = this.rider.wallet;\n            if (this.rider.wallet) {\n              this.account = this.rider.wallet.accounts[0];\n              this.contractService.getAccountBalance(this.account)\n                .subscribe((result) => this.zone.run(() => this.balance = result[0]));\n            }\n          }\n        }\n       });\n  }\n\n  ngAfterViewInit() {\n    this.getTags();\n  }\n\n  getTags(): void {\n    this.tagService.getTagsByMobile(this.phone())\n        .subscribe(tags => this.tags = tags);\n  }\n\n  phone(): string | null {\n    return this.authService.getUserPhone();\n  }\n\n  name(): string | null {\n    return this.authService.getUserName();\n  }\n\n  authenticated(): boolean {\n    return this.authService.authenticated();\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n\n  gotoUpdate(): void {\n    this.router.navigate([`/update`]);\n  }\n\n  gotoTagById(tag: Tag): void {\n    const tagId = tag ? tag.id : null;\n    this.router.navigate([`/tag/${tagId}`]);\n  }\n\n  getAccount(): string | null {\n    if (this.wallet) {\n      return this.wallet.accounts[0];\n    } else {\n      return null;\n    }\n  }\n\n  getAccountBalance(): Observable<string[] | null> {\n    if (!this.wallet) {\n      return of(null);\n    } else {\n      return this.contractService.getAccountBalance(this.wallet.accounts[0]);\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:  {\n    apiKey: 'AIzaSyARllasipU-7JhdvtkRV25er--zMyOPEW0',\n    authDomain: 'cloud-firestore-test-d95bf.firebaseapp.com',\n    databaseURL: 'https://cloud-firestore-test-d95bf.firebaseio.com',\n    projectId: 'cloud-firestore-test-d95bf',\n    storageBucket: 'cloud-firestore-test-d95bf.appspot.com',\n    messagingSenderId: '740765205427'\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}